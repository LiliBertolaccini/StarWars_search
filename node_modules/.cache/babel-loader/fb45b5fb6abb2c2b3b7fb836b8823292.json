{"ast":null,"code":"var _jsxFileName = \"/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport StarWarContext from '../context/StarWarContext';\nimport fetchApi from '../service/requestAPI'; // import { requestAPIAxios, requestAPI } from '../service/requestAPI';\n//const planet = e;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table() {\n  _s();\n\n  const {\n    search,\n    inputs,\n    setInputs\n  } = useContext(StarWarContext); // const { inputs, setInputs } = useState('');\n\n  const [planet, setPlanet] = useState([]);\n  const [planetFilter, setPlanetFilter] = useState([]);\n  const nameFilter = search.filter(planet => planet.name.toLowerCase(inputs).includes(nameFilter)); // useEffect(() => {\n  //  const nameFilter = search.filter((planet) => planet.name.toLowerCase(inputs)\n  //    .includes(nameFilter));\n  //  search(setFilter);\n  // }, [search, inputs, setFilter]);\n\n  useEffect(() => {\n    fetchApi('https://swapi.dev/api/planets');\n  }, []);\n\n  const fetchPlanets = async () => {\n    setPlanet(await fetchApi(fetchPlanets));\n  }; // const handleChange = ({ target }) => {\n  //  setInputs(target.value);\n  // };\n\n\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setInputs({ ...inputs,\n      [target.name]: target.value\n    });\n    setFilter(setInputs);\n\n    if (target.name) {\n      const filteredName = search.filter(planet => planet.name.toUpperCase().includes(target.value.toUpperCase()));\n      setSearch(filteredName);\n    } else {\n      setSearch(inputs);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Rotation Period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Orbital Period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Diameter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Climate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Gravity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Terrain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Surface Water\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Population\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Films\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Created\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Edited\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"data-testid='name-filter'\",\n          name: \"nameFilter\",\n          placeholder: \"digite o nome\",\n          value: nameFilter,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), search.map(planet => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.rotation_period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.orbital_period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.diameter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.climate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.gravity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.terrain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.surface_water\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.population\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.map((film, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: film\n          }, `${film}-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 39\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.created\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.edited\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)]\n      }, planet.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"W2LqzcRDhN+ZdD14LRO0NzdRwGA=\");\n\n_c = Table;\nexport default Table; // const { inputs, setInputs } = useState('');\n// const nameFilter = search.filter((planet) => planet.name.toLowerCase(inputs)\n//  .includes(nameFilter));\n/// / const [setFilter, setSearch] = useContext();\n// const handleChangeFilter = ({ target }) => {\n//  setInputs(target.value);\n// };\n// useEffect(() => {\n//  setSearch(setFilter);\n// }, [search, setFilter, setSearch]);\n//  <div>\n//  <input\n//      type=\"text\"\n//      id=\"data-testid='name-filter'\"\n//      name=\"nameFilter\"\n//      placeholder=\"digite o noooome que procura\"\n//      value={ inputs }\n//      onChange={ handleChangeFilter }\n//    />\n// </div>\n//  .filter((planet) => planet.name.toLowerCase().includes(inputs));\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useContext","StarWarContext","fetchApi","Table","search","inputs","setInputs","planet","setPlanet","useState","planetFilter","setPlanetFilter","nameFilter","filter","name","toLowerCase","includes","useEffect","fetchPlanets","handleChange","target","value","setFilter","filteredName","toUpperCase","setSearch","map","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","film","i","created","edited","url"],"sources":["/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/components/Table.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport StarWarContext from '../context/StarWarContext';\nimport fetchApi from '../service/requestAPI';\n// import { requestAPIAxios, requestAPI } from '../service/requestAPI';\n//const planet = e;\nfunction Table() {\n  const { search, inputs, setInputs } = useContext(StarWarContext);\n  // const { inputs, setInputs } = useState('');\n  const [planet, setPlanet] = useState([]);\n  const [planetFilter, setPlanetFilter] = useState([]);\n  const nameFilter = search.filter((planet) => planet.name.toLowerCase(inputs)\n    .includes(nameFilter));\n  // useEffect(() => {\n    //  const nameFilter = search.filter((planet) => planet.name.toLowerCase(inputs)\n    //    .includes(nameFilter));\n    //  search(setFilter);\n    // }, [search, inputs, setFilter]);\n\n  useEffect(() => {\n    fetchApi('https://swapi.dev/api/planets');\n  }, []);\n\n  const fetchPlanets = async () => {\n    setPlanet(await fetchApi(fetchPlanets));\n  };\n\n  // const handleChange = ({ target }) => {\n  //  setInputs(target.value);\n  // };\n  const handleChange = ({ target }) => {\n    setInputs({ ...inputs, [target.name]: target.value });\n    setFilter(setInputs);\n\n    if (target.name) {\n      const filteredName = search.filter((planet) => (\n        planet.name.toUpperCase().includes(target.value.toUpperCase())\n      ));\n      setSearch(filteredName);\n    } else {\n      setSearch(inputs);\n    }\n  };\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Rotation Period</th>\n          <th>Orbital Period</th>\n          <th>Diameter</th>\n          <th>Climate</th>\n          <th>Gravity</th>\n          <th>Terrain</th>\n          <th>Surface Water</th>\n          <th>Population</th>\n          <th>Films</th>\n          <th>Created</th>\n          <th>Edited</th>\n          <th>URL</th>\n        </tr>\n      </thead>\n      <tbody>\n        <div>\n          <input\n            type=\"text\"\n            id=\"data-testid='name-filter'\"\n            name=\"nameFilter\"\n            placeholder=\"digite o nome\"\n            value={ nameFilter }\n            onChange={ handleChange }\n          />\n        </div>\n        {\n          search\n            .map((planet) => (\n              <tr key={ planet.name }>\n                <td>{ planet.name }</td>\n                <td>{ planet.rotation_period }</td>\n                <td>{ planet.orbital_period }</td>\n                <td>{ planet.diameter }</td>\n                <td>{ planet.climate }</td>\n                <td>{ planet.gravity }</td>\n                <td>{ planet.terrain }</td>\n                <td>{ planet.surface_water }</td>\n                <td>{ planet.population }</td>\n                <td>\n                  { planet\n                    .map((film, i) => <p key={ `${film}-${i}` }>{film}</p>)}\n                </td>\n                <td>{ planet.created }</td>\n                <td>{ planet.edited}</td>\n                <td>{ planet.url }</td>\n              </tr>\n            ))\n        }\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n\n// const { inputs, setInputs } = useState('');\n// const nameFilter = search.filter((planet) => planet.name.toLowerCase(inputs)\n//  .includes(nameFilter));\n\n/// / const [setFilter, setSearch] = useContext();\n\n// const handleChangeFilter = ({ target }) => {\n//  setInputs(target.value);\n// };\n\n// useEffect(() => {\n//  setSearch(setFilter);\n// }, [search, setFilter, setSearch]);\n\n//  <div>\n//  <input\n//      type=\"text\"\n//      id=\"data-testid='name-filter'\"\n//      name=\"nameFilter\"\n//      placeholder=\"digite o noooome que procura\"\n//      value={ inputs }\n//      onChange={ handleChangeFilter }\n//    />\n// </div>\n\n//  .filter((planet) => planet.name.toLowerCase().includes(inputs));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}