{"ast":null,"code":"var _jsxFileName = \"/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/components/Forms.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import StarWarContext from '../context/StarWarContext';\n// import StarWarProvider from '../context/StarWarProvider';\n// import reqApiFetch from '../service/requestAPI';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Forms() {\n  _s();\n\n  const [planet, setPlanet] = useState([]); //const [planetFilter, setPlanetFilter] = useState([]);\n  // const [name, setName] = useState('');\n  // const [inputs] = useContext(StarWarProvider);\n  // const [filter, setFilters] = useContext(StarWarContext);\n  // const [data] = useState([]);\n  // const [filters] = useState({});\n  // const { inputs, setInputs } = useContext(StarWarProvider);\n\n  const {\n    setFilters,\n    setSearch,\n    data\n  } = useContext(StarWarContext); // const [data, setData] = useState([]);\n  // const [filters, setFilters] = useState({});\n  // useEffect(() => {\n  //  reqApiFetch().then((response) => setData(response));\n  // }, []);\n\n  const [setInputs] = useState([]); // const value = useMemo(() => ({\n  //  data,\n  //  filters,\n  //  setFilters,\n  // }), [data, filters, setFilters]);\n\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setInputs({ ...inputs,\n      [target.name]: target.value\n    });\n    setFilters(inputs);\n  }; // const handleClick = () => {\n  //  setFilters(inputs);\n  // };\n  // useEffect(() => {\n  //  const nameFilter = search.filter((planet) => planet.name.toLowerCase(inputs)\n  //    .includes(nameFilter));\n  //  setSearch(setFilter);\n  // }, [search, setFilter, setSearch, inputs]);\n  // useEffect(() => {\n  //  if (name.length === 0) {\n  //    setPlanetFilter(planet);\n  //  }\n  // }, [name.length, planet]);\n  // const filterName = ({ target: { value } }) => {\n  //  setName(value);\n  //  if (value.length > 0) {\n  //    const nameFilter = planet\n  //      .filter((planet) => planet.name.includes(value));\n  //    setPlanetFilter(nameFilter);\n  //  }\n  // };\n  //  return (\n  //    <form>\n  //      <input\n  //        type=\"text\"\n  //        name=\"name\"\n  //        id=\"name\"\n  //        // placeholder=\"name\"\n  //        value={ inputs }\n  //        onChange={ handleChange }\n  //      />\n  //      <select name=\"gender\" id=\"gender\">\n  //        <option value=\"\">Todos</option>\n  //        <option value=\"Female\">Feminino</option>\n  //        <option value=\"Male\">Masculino</option>\n  //        onChange=\n  //        { handleChange }\n  //        value=\n  //        { inputs }\n  //      </select>\n  //      <select name=\"episode\" id=\"episode\" onClick={ handleClick }>\n  //        <option value=\"maior que\">maior que</option>\n  //        <option value=\"menor que\">menor que</option>\n  //        <option value=\"igual a\">igual a</option>\n  //      </select>\n  //      <input\n  //        type=\"text\"\n  //        name=\"episode\"\n  //        onChange={ handleChange }\n  //        value={ inputs }\n  //      />\n  //      <button\n  //        type=\"button\"\n  //        onClick={ handleClick }\n  //      >\n  //        Filtrar Episódios\n  //      </button>\n  //    </form>\n  //  );\n  // }\n\n\n  if (target.name) {\n    const filteredName = data.filter(planet => planet.name.toUpperCase().includes(target.value.toUpperCase()));\n    setSearch(filteredName);\n  } else {\n    setSearch(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"nameFilter\",\n      children: [\"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"name-filter\",\n        type: \"text\",\n        name: \"nameFilter\",\n        value: inputs,\n        id: \"nameFilter\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Forms, \"1CByk/lBKc65UAGCpYTpqIZKGn8=\");\n\n_c = Forms;\nexport default Forms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forms\");","map":{"version":3,"names":["React","useState","Forms","planet","setPlanet","setFilters","setSearch","data","useContext","StarWarContext","setInputs","handleChange","target","inputs","name","value","filteredName","filter","toUpperCase","includes"],"sources":["/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/components/Forms.js"],"sourcesContent":["import React, { useState } from 'react';\n// import StarWarContext from '../context/StarWarContext';\n// import StarWarProvider from '../context/StarWarProvider';\n// import reqApiFetch from '../service/requestAPI';\n\nfunction Forms() {\n  const [planet, setPlanet] = useState([]);\n  //const [planetFilter, setPlanetFilter] = useState([]);\n  // const [name, setName] = useState('');\n  // const [inputs] = useContext(StarWarProvider);\n  // const [filter, setFilters] = useContext(StarWarContext);\n  // const [data] = useState([]);\n  // const [filters] = useState({});\n  // const { inputs, setInputs } = useContext(StarWarProvider);\n  const { setFilters, setSearch, data } = useContext(StarWarContext);\n  // const [data, setData] = useState([]);\n  // const [filters, setFilters] = useState({});\n  // useEffect(() => {\n  //  reqApiFetch().then((response) => setData(response));\n  // }, []);\n\n  const [setInputs] = useState([]);\n\n  // const value = useMemo(() => ({\n  //  data,\n  //  filters,\n  //  setFilters,\n  // }), [data, filters, setFilters]);\n\n  const handleChange = ({ target }) => {\n    setInputs({ ...inputs, [target.name]: target.value });\n    setFilters(inputs);\n  };\n\n  // const handleClick = () => {\n  //  setFilters(inputs);\n  // };\n\n  // useEffect(() => {\n  //  const nameFilter = search.filter((planet) => planet.name.toLowerCase(inputs)\n  //    .includes(nameFilter));\n  //  setSearch(setFilter);\n  // }, [search, setFilter, setSearch, inputs]);\n\n  // useEffect(() => {\n  //  if (name.length === 0) {\n  //    setPlanetFilter(planet);\n  //  }\n  // }, [name.length, planet]);\n\n  // const filterName = ({ target: { value } }) => {\n  //  setName(value);\n  //  if (value.length > 0) {\n  //    const nameFilter = planet\n  //      .filter((planet) => planet.name.includes(value));\n  //    setPlanetFilter(nameFilter);\n  //  }\n  // };\n\n  //  return (\n  //    <form>\n\n  //      <input\n  //        type=\"text\"\n  //        name=\"name\"\n  //        id=\"name\"\n  //        // placeholder=\"name\"\n  //        value={ inputs }\n  //        onChange={ handleChange }\n  //      />\n\n  //      <select name=\"gender\" id=\"gender\">\n  //        <option value=\"\">Todos</option>\n  //        <option value=\"Female\">Feminino</option>\n  //        <option value=\"Male\">Masculino</option>\n  //        onChange=\n  //        { handleChange }\n  //        value=\n  //        { inputs }\n  //      </select>\n\n  //      <select name=\"episode\" id=\"episode\" onClick={ handleClick }>\n  //        <option value=\"maior que\">maior que</option>\n  //        <option value=\"menor que\">menor que</option>\n  //        <option value=\"igual a\">igual a</option>\n  //      </select>\n\n  //      <input\n  //        type=\"text\"\n  //        name=\"episode\"\n  //        onChange={ handleChange }\n  //        value={ inputs }\n  //      />\n  //      <button\n  //        type=\"button\"\n  //        onClick={ handleClick }\n  //      >\n  //        Filtrar Episódios\n\n  //      </button>\n  //    </form>\n  //  );\n  // }\n\n  if (target.name) {\n    const filteredName = data.filter((planet) => (\n      planet.name.toUpperCase().includes(target.value.toUpperCase())\n    ));\n    setSearch(filteredName);\n  } else {\n    setSearch(data);\n  }\n\n  return (\n    <form>\n      <label htmlFor=\"nameFilter\">\n        Nome:\n        <input\n          data-testid=\"name-filter\"\n          type=\"text\"\n          name=\"nameFilter\"\n          value={ inputs }\n          id=\"nameFilter\"\n          onChange={ handleChange }\n        />\n      </label>\n    </form>\n  );\n}\n\nexport default Forms;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AACA;AACA;;;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACf,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC,CADe,CAEf;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,MAAM;IAAEI,UAAF;IAAcC,SAAd;IAAyBC;EAAzB,IAAkCC,UAAU,CAACC,cAAD,CAAlD,CATe,CAUf;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACC,SAAD,IAAcT,QAAQ,CAAC,EAAD,CAA5B,CAhBe,CAkBf;EACA;EACA;EACA;EACA;;EAEA,MAAMU,YAAY,GAAG,QAAgB;IAAA,IAAf;MAAEC;IAAF,CAAe;IACnCF,SAAS,CAAC,EAAE,GAAGG,MAAL;MAAa,CAACD,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;IAAnC,CAAD,CAAT;IACAV,UAAU,CAACQ,MAAD,CAAV;EACD,CAHD,CAxBe,CA6Bf;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;;;EAEA,IAAID,MAAM,CAACE,IAAX,EAAiB;IACf,MAAME,YAAY,GAAGT,IAAI,CAACU,MAAL,CAAad,MAAD,IAC/BA,MAAM,CAACW,IAAP,CAAYI,WAAZ,GAA0BC,QAA1B,CAAmCP,MAAM,CAACG,KAAP,CAAaG,WAAb,EAAnC,CADmB,CAArB;IAGAZ,SAAS,CAACU,YAAD,CAAT;EACD,CALD,MAKO;IACLV,SAAS,CAACC,IAAD,CAAT;EACD;;EAED,oBACE;IAAA,uBACE;MAAO,OAAO,EAAC,YAAf;MAAA,iCAEE;QACE,eAAY,aADd;QAEE,IAAI,EAAC,MAFP;QAGE,IAAI,EAAC,YAHP;QAIE,KAAK,EAAGM,MAJV;QAKE,EAAE,EAAC,YALL;QAME,QAAQ,EAAGF;MANb;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GA3HQT,K;;KAAAA,K;AA6HT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}