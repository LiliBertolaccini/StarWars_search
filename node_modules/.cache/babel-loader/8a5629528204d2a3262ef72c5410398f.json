{"ast":null,"code":"var _jsxFileName = \"/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/components/Forms.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport StarWarProvider from '../context/StarWarProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Forms() {\n  _s();\n\n  const {\n    dataPlanets,\n    // setDataPlanets,\n    search,\n    setSearch,\n    setListPlanet,\n    listPlanet\n  } = useContext(StarWarCon);\n  useEffect(() => {\n    if (search.length > 0) {\n      const dataSearch = dataPlanets.filter(el => el.name.includes(search));\n      setListPlanet(dataSearch);\n    } else {\n      setListPlanet(dataPlanets);\n    }\n  }, [data, dataPlanets, search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"name-filter\",\n      name: \"search\",\n      placeholder: \"digite o nome do planeta\",\n      value: search,\n      onChange: _ref => {\n        let {\n          target\n        } = _ref;\n        return setSearch(target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Forms, \"6w7aPaw+DL0Z4nlGPMvm43UhOfI=\");\n\n_c = Forms;\nexport default Forms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forms\");","map":{"version":3,"names":["React","useContext","useEffect","StarWarProvider","Forms","dataPlanets","search","setSearch","setListPlanet","listPlanet","StarWarCon","length","dataSearch","filter","el","name","includes","data","target","value"],"sources":["/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/components/Forms.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport StarWarProvider from '../context/StarWarProvider';\n\nfunction Forms() {\n  const {\n    dataPlanets,\n    // setDataPlanets,\n    search,\n    setSearch,\n    setListPlanet,\n    listPlanet } = useContext(StarWarCon);\n\n  useEffect(() => {\n    if (search.length > 0) {\n      const dataSearch = dataPlanets.filter((el) => el.name.includes(search));\n      setListPlanet(dataSearch);\n    } else {\n      setListPlanet(dataPlanets);\n    }\n  }, [data, dataPlanets, search]);\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        data-testid=\"name-filter\"\n        name=\"search\"\n        placeholder=\"digite o nome do planeta\"\n        value={ search }\n        onChange={ ({ target }) => setSearch(target.value) }\n      />\n    </div>\n  );\n}\nexport default Forms;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,4BAA5B;;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACf,MAAM;IACJC,WADI;IAEJ;IACAC,MAHI;IAIJC,SAJI;IAKJC,aALI;IAMJC;EANI,IAMWR,UAAU,CAACS,UAAD,CAN3B;EAQAR,SAAS,CAAC,MAAM;IACd,IAAII,MAAM,CAACK,MAAP,GAAgB,CAApB,EAAuB;MACrB,MAAMC,UAAU,GAAGP,WAAW,CAACQ,MAAZ,CAAoBC,EAAD,IAAQA,EAAE,CAACC,IAAH,CAAQC,QAAR,CAAiBV,MAAjB,CAA3B,CAAnB;MACAE,aAAa,CAACI,UAAD,CAAb;IACD,CAHD,MAGO;MACLJ,aAAa,CAACH,WAAD,CAAb;IACD;EACF,CAPQ,EAON,CAACY,IAAD,EAAOZ,WAAP,EAAoBC,MAApB,CAPM,CAAT;EASA,oBACE;IAAA,uBACE;MACE,IAAI,EAAC,MADP;MAEE,eAAY,aAFd;MAGE,IAAI,EAAC,QAHP;MAIE,WAAW,EAAC,0BAJd;MAKE,KAAK,EAAGA,MALV;MAME,QAAQ,EAAG;QAAA,IAAC;UAAEY;QAAF,CAAD;QAAA,OAAgBX,SAAS,CAACW,MAAM,CAACC,KAAR,CAAzB;MAAA;IANb;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GA9BQf,K;;KAAAA,K;AA+BT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}