{"ast":null,"code":"var _jsxFileName = \"/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/context/StarWarProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport reqApiFetch from '../service/requesteAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StarWarsProvider() {\n  _s();\n\n  // const [DATA, setData] = useState();\n  //  const fetchPlanets = async () => {\n  //    const response = await fetch('https://swapi.dev/api/planets');\n  //    const data = await response.json();\n  //    setData(data);\n  //  }\n  //  fetchData();\n  // }, [setData]),\n  const [data, setData] = useState([]);\n  const [filters, setFilters] = useState();\n  useEffect(() => {\n    reqApiFetch().then(response => setData(response));\n  }, []);\n  const value = useMemo(() => ({\n    data\n  }), [data]);\n  return /*#__PURE__*/_jsxDEV(StarWarsProvider.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StarWarsProvider, \"zAHBg5MAi1VUm4GfnRTUBk5AkAw=\");\n\n_c = StarWarsProvider;\nexport default StarWarsProvider; // import React, { useEffect, useMemo, useState } from 'react';\n/// / import reqApiFetch from '../service/requesteAPI';\n// import starWarContext from './StarWarContext';\n// import StarWarContext from './StarWarContext';\n// function StarWarProvider({ children, history }) {\n//  const [StarWarProvider, setStarWarProvider] = useState({ StarWarProvider });\n//  const [isLoading, setIsLoading] = useState(false);\n//  const fetchPlanets = async () => {\n//    try {\n//      setIsLoading(true);\n//      const response = await fetch('https://swapi.dev/api/planets');\n//      if (!response.ok) {\n//        const newError = await response.json();\n//        throw newError.message;\n//      }\n//      const data = await response.json();\n//      setGitData(data);\n//      history.push('/plantes');\n//    } catch (e) {\n//      setIsLoading({ name: '',\n//        species: '',\n//        gender: '',\n//        status: '',\n//        episode: '',\n//        error: e });\n//    } finally {\n//      setIsLoading(false);\n//    }\n//  };\n//  return (\n//    <StarWarContext.Provider value={ fetchPlanets }>\n//      {children}\n//    </StarWarContext.Provider>\n//  );\n//  //  const [data, setData] = useState([]);\n//  //  useEffect(() => {\n//  //    reqApiFetch().then((response) => setData(response));\n//  //  }, []);\n//  //  const value = useMemo(() => ({\n//  //    data,\n//  //  }), [data]);\n/// /  return (\n/// /    <StarWarContext.Provider value={value}>\n/// /      {children}\n/// /    </StarWarContext.Provider>\n/// /  );\n// }\n// export default StarWarProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"StarWarsProvider\");","map":{"version":3,"names":["React","useEffect","useState","reqApiFetch","StarWarsProvider","data","setData","filters","setFilters","then","response","value","useMemo","children"],"sources":["/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/context/StarWarProvider.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport reqApiFetch from '../service/requesteAPI';\n\nfunction StarWarsProvider() {\n// const [DATA, setData] = useState();\n\n  //  const fetchPlanets = async () => {\n  //    const response = await fetch('https://swapi.dev/api/planets');\n  //    const data = await response.json();\n  //    setData(data);\n  //  }\n  //  fetchData();\n  // }, [setData]),\n\n  const [data, setData] = useState([]);\n  const [filters, setFilters] = useState()\n  useEffect(() => {\n    reqApiFetch().then((response) => setData(response));\n  }, []);\n\n  const value = useMemo(() => ({\n    data,\n  }), [data]);\n\n  return (\n    <StarWarsProvider.Provider value={ value }>\n      {children}\n    </StarWarsProvider.Provider>\n\n  );\n}\n\nexport default StarWarsProvider;\n\n// import React, { useEffect, useMemo, useState } from 'react';\n/// / import reqApiFetch from '../service/requesteAPI';\n// import starWarContext from './StarWarContext';\n// import StarWarContext from './StarWarContext';\n\n// function StarWarProvider({ children, history }) {\n//  const [StarWarProvider, setStarWarProvider] = useState({ StarWarProvider });\n//  const [isLoading, setIsLoading] = useState(false);\n//  const fetchPlanets = async () => {\n//    try {\n//      setIsLoading(true);\n//      const response = await fetch('https://swapi.dev/api/planets');\n\n//      if (!response.ok) {\n//        const newError = await response.json();\n//        throw newError.message;\n//      }\n\n//      const data = await response.json();\n//      setGitData(data);\n//      history.push('/plantes');\n//    } catch (e) {\n//      setIsLoading({ name: '',\n//        species: '',\n//        gender: '',\n//        status: '',\n//        episode: '',\n//        error: e });\n//    } finally {\n//      setIsLoading(false);\n//    }\n//  };\n\n//  return (\n//    <StarWarContext.Provider value={ fetchPlanets }>\n//      {children}\n//    </StarWarContext.Provider>\n\n//  );\n//  //  const [data, setData] = useState([]);\n//  //  useEffect(() => {\n//  //    reqApiFetch().then((response) => setData(response));\n//  //  }, []);\n\n//  //  const value = useMemo(() => ({\n//  //    data,\n//  //  }), [data]);\n\n/// /  return (\n/// /    <StarWarContext.Provider value={value}>\n/// /      {children}\n/// /    </StarWarContext.Provider>\n/// /  );\n// }\n\n// export default StarWarProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAEA,SAASC,gBAAT,GAA4B;EAAA;;EAC5B;EAEE;EACA;EACA;EACA;EACA;EACA;EACA;EAEA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,EAAtC;EACAD,SAAS,CAAC,MAAM;IACdE,WAAW,GAAGM,IAAd,CAAoBC,QAAD,IAAcJ,OAAO,CAACI,QAAD,CAAxC;EACD,CAFQ,EAEN,EAFM,CAAT;EAIA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO;IAC3BP;EAD2B,CAAP,CAAD,EAEjB,CAACA,IAAD,CAFiB,CAArB;EAIA,oBACE,QAAC,gBAAD,CAAkB,QAAlB;IAA2B,KAAK,EAAGM,KAAnC;IAAA,UACGE;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GA3BQT,gB;;KAAAA,gB;AA6BT,eAAeA,gBAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}