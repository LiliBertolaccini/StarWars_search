{"ast":null,"code":"var _jsxFileName = \"/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport StarWarContext from '../context/StarWarContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table() {\n  _s();\n\n  const {\n    search\n  } = useContext(StarWarContext);\n  const [inputs, setInputs] = useState(''); // const [planetFilter, setPlanetFilter] = useState([]);\n\n  useEffect(() => {\n    const nameFilter = search.filter(planet => planet.name.toLowerCase(inputs).includes(nameFilter));\n    search(setFilter);\n    setSearch(setInputs);\n  }, [search, inputs, setFilter]);\n\n  const fetchPlanets = async () => {\n    setPlanet(await fetchApi(fetchPlanets));\n  }; // const handleChange = ({ target }) => {\n  //  setInputs(target.value);\n  // };\n\n\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setInputs({ ...inputs,\n      [target.name]: target.value\n    });\n    setFilter(setInputs);\n\n    if (target.name) {\n      const filteredName = search.filter(planet => planet.name.toUpperCase().includes(target.value.toUpperCase()));\n      setSearch(filteredName);\n    } else {\n      setSearch(inputs);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rotation Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Orbital Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Diameter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Climate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Gravity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Terrain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Surface Water\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Population\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Films\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edited\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: search.map(planet => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: planet.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: planet.rotation_period\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: planet.orbital_period\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: planet.diameter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: planet.climate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: planet.gravity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: planet.terrain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: planet.surface_water\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: planet.population\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: planet.films\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: planet.created\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: planet.edited\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: planet.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this)]\n        }, planet.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"11vBnZKOgMXwt1H8X6QZJcaz3ps=\");\n\n_c = Table;\nexport default Table; // const { inputs, setInputs } = useState('');\n// const nameFilter = search.filter((planet) => planet.name.toLowerCase(inputs)\n//  .includes(nameFilter));\n/// / const [setFilter, setSearch] = useContext();\n// const handleChangeFilter = ({ target }) => {\n//  setInputs(target.value);\n// };\n// useEffect(() => {\n//  setSearch(setFilter);\n// }, [search, setFilter, setSearch]);\n//  <div>\n//  <input\n//      type=\"text\"\n//      id=\"data-testid='name-filter'\"\n//      name=\"nameFilter\"\n//      placeholder=\"digite o noooome que procura\"\n//      value={ inputs }\n//      onChange={ handleChangeFilter }\n//    />\n// </div>\n//  .filter((planet) => planet.name.toLowerCase().includes(inputs));\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useContext","StarWarContext","Table","search","inputs","setInputs","useState","useEffect","nameFilter","filter","planet","name","toLowerCase","includes","setFilter","setSearch","fetchPlanets","setPlanet","fetchApi","handleChange","target","value","filteredName","toUpperCase","map","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url"],"sources":["/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/components/Table.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport StarWarContext from '../context/StarWarContext';\n\nfunction Table() {\n  const { search } = useContext(StarWarContext);\n  const [inputs, setInputs] = useState('');\n  // const [planetFilter, setPlanetFilter] = useState([]);\n\n  useEffect(() => {\n    const nameFilter = search.filter((planet) => planet.name.toLowerCase(inputs)\n      .includes(nameFilter));\n    search(setFilter);\n    setSearch(setInputs);\n  }, [search, inputs, setFilter]);\n\n  const fetchPlanets = async () => {\n    setPlanet(await fetchApi(fetchPlanets));\n  };\n\n  // const handleChange = ({ target }) => {\n  //  setInputs(target.value);\n  // };\n  const handleChange = ({ target }) => {\n    setInputs({ ...inputs, [target.name]: target.value });\n    setFilter(setInputs);\n\n    if (target.name) {\n      const filteredName = search.filter((planet) => (\n        planet.name.toUpperCase().includes(target.value.toUpperCase())\n      ));\n      setSearch(filteredName);\n    } else {\n      setSearch(inputs);\n    }\n  };\n\n  return (\n    <div>\n      <Form />\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Rotation Period</th>\n            <th>Orbital Period</th>\n            <th>Diameter</th>\n            <th>Climate</th>\n            <th>Gravity</th>\n            <th>Terrain</th>\n            <th>Surface Water</th>\n            <th>Population</th>\n            <th>Films</th>\n            <th>Created</th>\n            <th>Edited</th>\n            <th>URL</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            search\n              .map((planet) => (\n                <tr key={ planet.name }>\n                  <td>{ planet.name }</td>\n                  <td>{ planet.rotation_period }</td>\n                  <td>{ planet.orbital_period }</td>\n                  <td>{ planet.diameter }</td>\n                  <td>{ planet.climate }</td>\n                  <td>{ planet.gravity }</td>\n                  <td>{ planet.terrain }</td>\n                  <td>{ planet.surface_water }</td>\n                  <td>{ planet.population }</td>\n                  <td>{ planet.films }</td>\n                  <td>{ planet.created }</td>\n                  <td>{ planet.edited}</td>\n                  <td>{ planet.url }</td>\n                </tr>\n              ))\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n\n// const { inputs, setInputs } = useState('');\n// const nameFilter = search.filter((planet) => planet.name.toLowerCase(inputs)\n//  .includes(nameFilter));\n\n/// / const [setFilter, setSearch] = useContext();\n\n// const handleChangeFilter = ({ target }) => {\n//  setInputs(target.value);\n// };\n\n// useEffect(() => {\n//  setSearch(setFilter);\n// }, [search, setFilter, setSearch]);\n\n//  <div>\n//  <input\n//      type=\"text\"\n//      id=\"data-testid='name-filter'\"\n//      name=\"nameFilter\"\n//      placeholder=\"digite o noooome que procura\"\n//      value={ inputs }\n//      onChange={ handleChangeFilter }\n//    />\n// </div>\n\n//  .filter((planet) => planet.name.toLowerCase().includes(inputs));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}