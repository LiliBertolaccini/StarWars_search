{"ast":null,"code":"var _jsxFileName = \"/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/components/Forms2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport StarWarContext from '../context/StarWarContext';\nimport StarWarProvider from '../context/StarWarProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Forms2() {\n  _s();\n\n  const [planets, setPlanets] = useState([]); // const [planetsFilter, setPlanetsFilter] = useState([]);\n\n  const [name, setName] = useState('');\n  const {\n    inputs,\n    setInputs\n  } = useContext(StarWarProvider);\n  const {\n    setFilters\n  } = useContext(StarWarContext); // const [data, setData] = useState([]);\n  // const [filters, setFilters] = useState({});\n  // const fetchAPI = async () => {\n  //  setPlanets(await starWarsApi());\n  // };\n  // useEffect(() => {\n  //  fetchAPI().then((response) => setData(response));\n  // }, []);\n  // useEffect(() => {\n  //  if (name.length === 0) {\n  //    setPlanetsFilter(planets);\n  //  }\n  // }, [name.length, planets]);\n  // const filterName = ({ target: { value } }) => {\n  //  setName(value);\n  //  if (value.length > 0) {\n  //    const nameFilter = planets\n  //      .filter((e) => e.name.includes(value));\n  //    setPlanetsFilter(nameFilter);\n  //  }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Rotation Period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Orbital Period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Diameter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Climate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Gravity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Terrain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Surface Water\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Population\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Films\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Created\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Edited\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: filterName,\n          \"data-testid\": \"name-filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Forms2, \"XEG1f2vMxhZyBqGeqmwA2LU4I68=\");\n\n_c = Forms2;\nexport default Forms2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forms2\");","map":{"version":3,"names":["React","useEffect","useState","StarWarContext","StarWarProvider","Forms2","planets","setPlanets","name","setName","inputs","setInputs","useContext","setFilters","filterName"],"sources":["/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/components/Forms2.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport StarWarContext from '../context/StarWarContext';\nimport StarWarProvider from '../context/StarWarProvider';\n\nfunction Forms2() {\n  const [planets, setPlanets] = useState([]);\n  // const [planetsFilter, setPlanetsFilter] = useState([]);\n  const [name, setName] = useState('');\n  const { inputs, setInputs } = useContext(StarWarProvider);\n  const { setFilters } = useContext(StarWarContext);\n  // const [data, setData] = useState([]);\n  // const [filters, setFilters] = useState({});\n\n  // const fetchAPI = async () => {\n  //  setPlanets(await starWarsApi());\n  // };\n\n  // useEffect(() => {\n  //  fetchAPI().then((response) => setData(response));\n  // }, []);\n\n  // useEffect(() => {\n  //  if (name.length === 0) {\n  //    setPlanetsFilter(planets);\n  //  }\n  // }, [name.length, planets]);\n\n  // const filterName = ({ target: { value } }) => {\n  //  setName(value);\n  //  if (value.length > 0) {\n  //    const nameFilter = planets\n  //      .filter((e) => e.name.includes(value));\n  //    setPlanetsFilter(nameFilter);\n  //  }\n  // };\n\n  return (\n    <form>\n      <table>\n        <tr>\n          <th>Name</th>\n          <th>Rotation Period</th>\n          <th>Orbital Period</th>\n          <th>Diameter</th>\n          <th>Climate</th>\n          <th>Gravity</th>\n          <th>Terrain</th>\n          <th>Surface Water</th>\n          <th>Population</th>\n          <th>Films</th>\n          <th>Created</th>\n          <th>Edited</th>\n          <th>URL</th>\n        </tr>\n\n        <div>\n          <input type=\"text\" onChange={ filterName } data-testid=\"name-filter\" />\n        </div>\n\n        {/* {\n          search\n            .filter((e) => e.name.toLowerCase().includes(inputs))\n            .map((e) => (\n              <tr key={ e.name }>\n                <td>{ e.name }</td>\n                <td>{ e.rotation_period }</td>\n                <td>{ e.orbital_period }</td>\n                <td>{ e.diameter }</td>\n                <td>{ e.climate }</td>\n                <td>{ e.gravity }</td>\n                <td>{ e.terrain }</td>\n                <td>{ e.surface_water }</td>\n                <td>{ e.population }</td>\n                <td>\n                  {e.films\n                    .map((film, i) => <p key={ `${film}-${i}` }>{film}</p>)}\n                </td>\n                <td>{ e.created }</td>\n              </tr>\n            ))\n        } */}\n        {/*\n        {planetsFilter.map((e) => (\n          <tr key={ e.name }>\n            <td>{e.name}</td>\n            <td>{e.rotation_period}</td>\n            <td>{e.orbital_period}</td>\n            <td>{e.diameter}</td>\n            <td>{e.climate}</td>\n            <td>{e.gravity}</td>\n            <td>{e.terrain}</td>\n            <td>{e.surface_water}</td>\n            <td>{e.population}</td>\n            <td>{e.films.map((element) => `${element} `)}</td>\n            <td>{e.created}</td>\n            <td>{e.edited}</td>\n            <td>{e.url}</td>\n          </tr>\n        ))} */}\n      </table>\n    </form>\n  );\n}\n\nexport default Forms2;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EAChB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC,CADgB,CAEhB;;EACA,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM;IAAEQ,MAAF;IAAUC;EAAV,IAAwBC,UAAU,CAACR,eAAD,CAAxC;EACA,MAAM;IAAES;EAAF,IAAiBD,UAAU,CAACT,cAAD,CAAjC,CALgB,CAMhB;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,uBACE;MAAA,wBACE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF,eAME;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANF,eAOE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPF,eAQE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARF,eASE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QATF,eAUE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAVF,eAWE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAXF,eAYE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAZF,eAaE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAbF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAiBE;QAAA,uBACE;UAAO,IAAI,EAAC,MAAZ;UAAmB,QAAQ,EAAGW,UAA9B;UAA2C,eAAY;QAAvD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAjBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkED;;GAlGQT,M;;KAAAA,M;AAoGT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}