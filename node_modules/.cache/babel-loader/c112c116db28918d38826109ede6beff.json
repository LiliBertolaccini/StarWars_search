{"ast":null,"code":"import axios from 'axios';\nimport React, { useState } from 'react'; // const [Forms, setForms] = useState({ nome: '', especie: '', error: '' });\n\nconst reqApiFetch = async () => {\n  try {\n    // setIsLoading(true);\n    const response = await fetch('https://swapi.dev/api/planets');\n    const {\n      results\n    } = await response.json();\n    return results;\n  } catch (e) {\n    throw new Error(e.message);\n  }\n};\n\nconst axiosAPI = axios.create({\n  baseURL: 'https://swapi.dev/api'\n});\nexport const requesteAPIAxios = async () => {\n  try {\n    const {\n      data: {\n        result\n      }\n    } = await axiosAPI('/planets');\n    return result;\n  } catch (e) {\n    throw new Error(e.message);\n  }\n};\nexport default reqApiFetch; // if (!data.ok) {\n//  const newError = await data.json();\n//  throw newError.message;\n// }\n//    const json = await data.json();\n//    setData(json);\n//    history.push('/planets');\n//  } catch (e) {\n//    reqApiFetch({ name: '', specie: '', gender: , episode: () => {} , error: e });    \n//  } finally {\n//    setIsLoading(false);\n//  }\n// };\n// const export reqApiFetch = async () => {\n//  try {\n//    const { data: { result }} = await history.push('/planets'); linha 18-21","map":{"version":3,"names":["axios","React","useState","reqApiFetch","response","fetch","results","json","e","Error","message","axiosAPI","create","baseURL","requesteAPIAxios","data","result"],"sources":["/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/service/requesteAPI.js"],"sourcesContent":["import axios from 'axios';\n import React, { useState } from 'react';\n\n// const [Forms, setForms] = useState({ nome: '', especie: '', error: '' });\n\nconst reqApiFetch = async () => {\n  try {\n    // setIsLoading(true);\n    const response = await fetch('https://swapi.dev/api/planets');\n    const { results } = await response.json();\n    return results;\n  } catch (e) {\n    throw new Error(e.message);\n  }\n};\nconst axiosAPI = axios.create({\n  baseURL: 'https://swapi.dev/api',\n});\nexport const requesteAPIAxios = async () => {\n  try {\n    const { data: { result } } = await axiosAPI('/planets');\n    return result;\n  } catch (e) {\n    throw new Error(e.message);\n  }\n};\n\nexport default reqApiFetch;\n// if (!data.ok) {\n//  const newError = await data.json();\n//  throw newError.message;\n// }\n\n//    const json = await data.json();\n//    setData(json);\n//    history.push('/planets');\n//  } catch (e) {\n//    reqApiFetch({ name: '', specie: '', gender: , episode: () => {} , error: e });    \n//  } finally {\n//    setIsLoading(false);\n//  }\n// };\n\n// const export reqApiFetch = async () => {\n//  try {\n//    const { data: { result }} = await history.push('/planets'); linha 18-21\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACC,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAED;;AAEA,MAAMC,WAAW,GAAG,YAAY;EAC9B,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAA5B;IACA,MAAM;MAAEC;IAAF,IAAc,MAAMF,QAAQ,CAACG,IAAT,EAA1B;IACA,OAAOD,OAAP;EACD,CALD,CAKE,OAAOE,CAAP,EAAU;IACV,MAAM,IAAIC,KAAJ,CAAUD,CAAC,CAACE,OAAZ,CAAN;EACD;AACF,CATD;;AAUA,MAAMC,QAAQ,GAAGX,KAAK,CAACY,MAAN,CAAa;EAC5BC,OAAO,EAAE;AADmB,CAAb,CAAjB;AAGA,OAAO,MAAMC,gBAAgB,GAAG,YAAY;EAC1C,IAAI;IACF,MAAM;MAAEC,IAAI,EAAE;QAAEC;MAAF;IAAR,IAAuB,MAAML,QAAQ,CAAC,UAAD,CAA3C;IACA,OAAOK,MAAP;EACD,CAHD,CAGE,OAAOR,CAAP,EAAU;IACV,MAAM,IAAIC,KAAJ,CAAUD,CAAC,CAACE,OAAZ,CAAN;EACD;AACF,CAPM;AASP,eAAeP,WAAf,C,CACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module"}