{"ast":null,"code":"var _jsxFileName = \"/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/components/Forms.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import StarWarContext from '../context/StarWarContext';\n// import StarWarProvider from '../context/StarWarProvider';\n// import reqApiFetch from '../service/requestAPI';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Forms() {\n  _s();\n\n  const [planet, setPlanet] = useState([]);\n  const [planetFilter, setPlanetFilter] = useState([]);\n  const [name, setName] = useState('');\n  const [inputs] = useContext(StarWarProvider); // const [filter, setFilters] = useContext(StarWarContext);\n\n  const [data, setData] = useState([]); // const [filters] = useState({});\n  // const { inputs, setInputs } = useContext(StarWarProvider);\n  // const { setFilters } = useContext(StarWarContext);\n  // const [data, setData] = useState([]);\n  // const [filters, setFilters] = useState({});\n  // useEffect(() => {\n  //  reqApiFetch().then((response) => setData(response));\n  // }, []);\n\n  const [setInputs] = useState([]); // const value = useMemo(() => ({\n  //  data,\n  //  filters,\n  //  setFilters,\n  // }), [data, filters, setFilters]);\n\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setInputs({ ...inputs,\n      [target.name]: target.value\n    });\n    setFilters(inputs);\n  }; // const handleClick = () => {\n  //  setFilters(inputs);\n  // };\n  // useEffect(() => {\n  //  const nameFilter = search.filter((planet) => planet.name.toLowerCase(inputs)\n  //    .includes(nameFilter));\n  //  setSearch(setFilter);\n  // }, [search, setFilter, setSearch, inputs]);\n\n\n  useEffect(() => {\n    if (name.length === 0) {\n      setPlanetFilter(planet);\n    }\n  }, [name.length, planet]); // const filterName = ({ target: { value } }) => {\n  //  setName(value);\n  //  if (value.length > 0) {\n  //    const nameFilter = planet\n  //      .filter((planet) => planet.name.includes(value));\n  //    setPlanetFilter(nameFilter);\n  //  }\n  // };\n  //  return (\n  //    <form>\n  //      <input\n  //        type=\"text\"\n  //        name=\"name\"\n  //        id=\"name\"\n  //        // placeholder=\"name\"\n  //        value={ inputs }\n  //        onChange={ handleChange }\n  //      />\n  //      <select name=\"gender\" id=\"gender\">\n  //        <option value=\"\">Todos</option>\n  //        <option value=\"Female\">Feminino</option>\n  //        <option value=\"Male\">Masculino</option>\n  //        onChange=\n  //        { handleChange }\n  //        value=\n  //        { inputs }\n  //      </select>\n  //      <select name=\"episode\" id=\"episode\" onClick={ handleClick }>\n  //        <option value=\"maior que\">maior que</option>\n  //        <option value=\"menor que\">menor que</option>\n  //        <option value=\"igual a\">igual a</option>\n  //      </select>\n  //      <input\n  //        type=\"text\"\n  //        name=\"episode\"\n  //        onChange={ handleChange }\n  //        value={ inputs }\n  //      />\n  //      <button\n  //        type=\"button\"\n  //        onClick={ handleClick }\n  //      >\n  //        Filtrar Episódios\n  //      </button>\n  //    </form>\n  //  );\n  //}\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"nametypedText\",\n      children: [\"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"name-filter\",\n        type: \"text\",\n        name: \"typedText\",\n        value: inputs.typedText,\n        id: \"typedText\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Forms, \"Iqb7yG2wQjPEeHX2V4n6AEF30Fs=\");\n\n_c = Forms;\nexport default Forms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forms\");","map":{"version":3,"names":["React","useState","Forms","planet","setPlanet","planetFilter","setPlanetFilter","name","setName","inputs","useContext","StarWarProvider","data","setData","setInputs","handleChange","target","value","setFilters","useEffect","length","typedText"],"sources":["/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/components/Forms.js"],"sourcesContent":["import React, { useState } from 'react';\n// import StarWarContext from '../context/StarWarContext';\n// import StarWarProvider from '../context/StarWarProvider';\n// import reqApiFetch from '../service/requestAPI';\n\nfunction Forms() {\n  const [planet, setPlanet] = useState([]);\n  const [planetFilter, setPlanetFilter] = useState([]);\n  const [name, setName] = useState('');\n  const [inputs] = useContext(StarWarProvider);\n  // const [filter, setFilters] = useContext(StarWarContext);\n  const [data, setData] = useState([]);\n  // const [filters] = useState({});\n  // const { inputs, setInputs } = useContext(StarWarProvider);\n  // const { setFilters } = useContext(StarWarContext);\n  // const [data, setData] = useState([]);\n  // const [filters, setFilters] = useState({});\n  // useEffect(() => {\n  //  reqApiFetch().then((response) => setData(response));\n  // }, []);\n\n  const [setInputs] = useState([]);\n\n  // const value = useMemo(() => ({\n  //  data,\n  //  filters,\n  //  setFilters,\n  // }), [data, filters, setFilters]);\n\n  const handleChange = ({ target }) => {\n    setInputs({ ...inputs, [target.name]: target.value });\n    setFilters(inputs);\n  };\n\n  // const handleClick = () => {\n  //  setFilters(inputs);\n  // };\n\n  // useEffect(() => {\n  //  const nameFilter = search.filter((planet) => planet.name.toLowerCase(inputs)\n  //    .includes(nameFilter));\n  //  setSearch(setFilter);\n  // }, [search, setFilter, setSearch, inputs]);\n\n  useEffect(() => {\n    if (name.length === 0) {\n      setPlanetFilter(planet);\n    }\n  }, [name.length, planet]);\n\n  // const filterName = ({ target: { value } }) => {\n  //  setName(value);\n  //  if (value.length > 0) {\n  //    const nameFilter = planet\n  //      .filter((planet) => planet.name.includes(value));\n  //    setPlanetFilter(nameFilter);\n  //  }\n  // };\n\n//  return (\n//    <form>\n\n//      <input\n//        type=\"text\"\n//        name=\"name\"\n//        id=\"name\"\n//        // placeholder=\"name\"\n//        value={ inputs }\n//        onChange={ handleChange }\n//      />\n\n//      <select name=\"gender\" id=\"gender\">\n//        <option value=\"\">Todos</option>\n//        <option value=\"Female\">Feminino</option>\n//        <option value=\"Male\">Masculino</option>\n//        onChange=\n//        { handleChange }\n//        value=\n//        { inputs }\n//      </select>\n\n//      <select name=\"episode\" id=\"episode\" onClick={ handleClick }>\n//        <option value=\"maior que\">maior que</option>\n//        <option value=\"menor que\">menor que</option>\n//        <option value=\"igual a\">igual a</option>\n//      </select>\n\n//      <input\n//        type=\"text\"\n//        name=\"episode\"\n//        onChange={ handleChange }\n//        value={ inputs }\n//      />\n//      <button\n//        type=\"button\"\n//        onClick={ handleClick }\n//      >\n//        Filtrar Episódios\n\n//      </button>\n//    </form>\n//  );\n//}\n\n\nreturn (\n  <form>\n    <label htmlFor=\"nametypedText\">\n      Nome:\n      <input\n        data-testid=\"name-filter\"\n        type=\"text\"\n        name=\"typedText\"\n        value={ inputs.typedText }\n        id=\"typedText\"\n        onChange={ handleChange }\n      />\n    </label>\n  </form>\n);\n}\n\nexport default Forms;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AACA;AACA;;;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACf,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACQ,MAAD,IAAWC,UAAU,CAACC,eAAD,CAA3B,CAJe,CAKf;;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC,CANe,CAOf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACa,SAAD,IAAcb,QAAQ,CAAC,EAAD,CAA5B,CAhBe,CAkBf;EACA;EACA;EACA;EACA;;EAEA,MAAMc,YAAY,GAAG,QAAgB;IAAA,IAAf;MAAEC;IAAF,CAAe;IACnCF,SAAS,CAAC,EAAE,GAAGL,MAAL;MAAa,CAACO,MAAM,CAACT,IAAR,GAAeS,MAAM,CAACC;IAAnC,CAAD,CAAT;IACAC,UAAU,CAACT,MAAD,CAAV;EACD,CAHD,CAxBe,CA6Bf;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;;EAEAU,SAAS,CAAC,MAAM;IACd,IAAIZ,IAAI,CAACa,MAAL,KAAgB,CAApB,EAAuB;MACrBd,eAAe,CAACH,MAAD,CAAf;IACD;EACF,CAJQ,EAIN,CAACI,IAAI,CAACa,MAAN,EAAcjB,MAAd,CAJM,CAAT,CAvCe,CA6Cf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEF;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;;EAGA,oBACE;IAAA,uBACE;MAAO,OAAO,EAAC,eAAf;MAAA,iCAEE;QACE,eAAY,aADd;QAEE,IAAI,EAAC,MAFP;QAGE,IAAI,EAAC,WAHP;QAIE,KAAK,EAAGM,MAAM,CAACY,SAJjB;QAKE,EAAE,EAAC,WALL;QAME,QAAQ,EAAGN;MANb;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAeC;;GAnHQb,K;;KAAAA,K;AAqHT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}