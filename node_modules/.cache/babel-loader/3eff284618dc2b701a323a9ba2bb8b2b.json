{"ast":null,"code":"var _jsxFileName = \"/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/components/Forms2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport starWarsApi from '../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Forms2() {\n  _s();\n\n  //const [planets, setPlanets] = useState([]);\n  // const [planetsFilter, setPlanetsFilter] = useState([]);\n  const [name, setName] = useState('');\n  const {\n    inputs,\n    setInputs\n  } = useContext(StarWarProvider);\n  const {\n    setFilters\n  } = useContext(StarWarContext); // const [data, setData] = useState([]);\n  // const [filters, setFilters] = useState({});\n\n  const fetchAPI = async () => {\n    setPlanets(await starWarsApi());\n  };\n\n  useEffect(() => {\n    fetchAPI().then(response => setData(response));\n  }, []);\n  useEffect(() => {\n    if (name.length === 0) {\n      setPlanetsFilter(planets);\n    }\n  }, [name.length, planets]);\n\n  const filterName = _ref => {\n    let {\n      target: {\n        value\n      }\n    } = _ref;\n    setName(value);\n\n    if (value.length > 0) {\n      const nameFilter = planets.filter(e => e.name.includes(value));\n      setPlanetsFilter(nameFilter);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Rotation Period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Orbital Period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Diameter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Climate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Gravity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Terrain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Surface Water\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Population\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Films\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Created\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Edited\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: filterName,\n          \"data-testid\": \"name-filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), planetsFilter.map(e => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.rotation_period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.orbital_period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.diameter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.climate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.gravity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.terrain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.surface_water\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.population\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.films.map(element => `${element} `)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.created\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.edited\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: e.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, e.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Forms2, \"qAL+DHChRMws6MWY9OP5bPgf4Xs=\");\n\n_c = Forms2;\nexport default Forms2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forms2\");","map":{"version":3,"names":["React","useEffect","useState","starWarsApi","Forms2","name","setName","inputs","setInputs","useContext","StarWarProvider","setFilters","StarWarContext","fetchAPI","setPlanets","then","response","setData","length","setPlanetsFilter","planets","filterName","target","value","nameFilter","filter","e","includes","planetsFilter","map","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","element","created","edited","url"],"sources":["/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/components/Forms2.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport starWarsApi from '../services';\n\nfunction Forms2() {\n  //const [planets, setPlanets] = useState([]);\n  // const [planetsFilter, setPlanetsFilter] = useState([]);\n  const [name, setName] = useState('');\n  const { inputs, setInputs } = useContext(StarWarProvider);\n  const { setFilters } = useContext(StarWarContext);\n  // const [data, setData] = useState([]);\n  // const [filters, setFilters] = useState({});\n\n  const fetchAPI = async () => {\n    setPlanets(await starWarsApi());\n  };\n\n  useEffect(() => {\n    fetchAPI().then((response) => setData(response));\n  }, []);\n\n  useEffect(() => {\n    if (name.length === 0) {\n      setPlanetsFilter(planets);\n    }\n  }, [name.length, planets]);\n\n  const filterName = ({ target: { value } }) => {\n    setName(value);\n    if (value.length > 0) {\n      const nameFilter = planets\n        .filter((e) => e.name.includes(value));\n      setPlanetsFilter(nameFilter);\n    }\n  };\n\n  return (\n    <form>\n      <table>\n        <tr>\n          <th>Name</th>\n          <th>Rotation Period</th>\n          <th>Orbital Period</th>\n          <th>Diameter</th>\n          <th>Climate</th>\n          <th>Gravity</th>\n          <th>Terrain</th>\n          <th>Surface Water</th>\n          <th>Population</th>\n          <th>Films</th>\n          <th>Created</th>\n          <th>Edited</th>\n          <th>URL</th>\n        </tr>\n\n        <div>\n          <input type=\"text\" onChange={ filterName } data-testid=\"name-filter\" />\n        </div>\n\n        {planetsFilter.map((e) => (\n          <tr key={ e.name }>\n            <td>{e.name}</td>\n            <td>{e.rotation_period}</td>\n            <td>{e.orbital_period}</td>\n            <td>{e.diameter}</td>\n            <td>{e.climate}</td>\n            <td>{e.gravity}</td>\n            <td>{e.terrain}</td>\n            <td>{e.surface_water}</td>\n            <td>{e.population}</td>\n            <td>{e.films.map((element) => `${element} `)}</td>\n            <td>{e.created}</td>\n            <td>{e.edited}</td>\n            <td>{e.url}</td>\n          </tr>\n        ))}\n      </table>\n    </form>\n  );\n}\n\nexport default Forms2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}