{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import StarWarContext from '../context/StarWarContext';\n// import StarWarProvider from '../context/StarWarProvider';\n// function Forms2() {\n//  const [planets, setPlanets] = useState([]);\n// const [planetsFilter, setPlanetsFilter] = useState([]);\n// const [name, setName] = useState('');\n// const { inputs, setInputs } = useContext(StarWarProvider);\n// const { setFilters } = useContext(StarWarContext);\n// const [data, setData] = useState([]);\n// const [filters, setFilters] = useState({});\n// const fetchAPI = async () => {\n//  setPlanets(await starWarsApi());\n// };\n// useEffect(() => {\n//  fetchAPI().then((response) => setData(response));\n// }, []);\n// useEffect(() => {\n//  if (name.length === 0) {\n//    setPlanetsFilter(planets);\n//  }\n// }, [name.length, planets]);\n// const filterName = ({ target: { value } }) => {\n//  setName(value);\n//  if (value.length > 0) {\n//    const nameFilter = planets\n//      .filter((e) => e.name.includes(value));\n//    setPlanetsFilter(nameFilter);\n//  }\n// };\n// return (\n//  <form>\n//    <table>\n//      <tr>\n//        <th>Name</th>\n//        <th>Rotation Period</th>\n//        <th>Orbital Period</th>\n//        <th>Diameter</th>\n//        <th>Climate</th>\n//        <th>Gravity</th>\n//        <th>Terrain</th>\n//        <th>Surface Water</th>\n//        <th>Population</th>\n//        <th>Films</th>\n//        <th>Created</th>\n//        <th>Edited</th>\n//        <th>URL</th>\n//      </tr>\n{\n  /* <div>\n          <input type=\"text\" onChange={ filterName } data-testid=\"name-filter\" />\n        </div> */\n}\n{\n  /* {\n          search\n            .filter((e) => e.name.toLowerCase().includes(inputs))\n            .map((e) => (\n              <tr key={ e.name }>\n                <td>{ e.name }</td>\n                <td>{ e.rotation_period }</td>\n                <td>{ e.orbital_period }</td>\n                <td>{ e.diameter }</td>\n                <td>{ e.climate }</td>\n                <td>{ e.gravity }</td>\n                <td>{ e.terrain }</td>\n                <td>{ e.surface_water }</td>\n                <td>{ e.population }</td>\n                <td>\n                  {e.films\n                    .map((film, i) => <p key={ `${film}-${i}` }>{film}</p>)}\n                </td>\n                <td>{ e.created }</td>\n              </tr>\n            ))\n        } */\n}\n{\n  /*\n        {planetsFilter.map((e) => (\n          <tr key={ e.name }>\n            <td>{e.name}</td>\n            <td>{e.rotation_period}</td>\n            <td>{e.orbital_period}</td>\n            <td>{e.diameter}</td>\n            <td>{e.climate}</td>\n            <td>{e.gravity}</td>\n            <td>{e.terrain}</td>\n            <td>{e.surface_water}</td>\n            <td>{e.population}</td>\n            <td>{e.films.map((element) => `${element} `)}</td>\n            <td>{e.created}</td>\n            <td>{e.edited}</td>\n            <td>{e.url}</td>\n          </tr>\n        ))} */\n}\n{\n  /* </table>\n    </form>\n  );\n  }\n  export default Forms2; */\n}","map":{"version":3,"names":[],"sources":["/Users/lilianbarrosbertolaccini/PROJETOS/sd-025-b-project-starwars-planets-search/src/components/Forms2.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import StarWarContext from '../context/StarWarContext';\n// import StarWarProvider from '../context/StarWarProvider';\n\n// function Forms2() {\n//  const [planets, setPlanets] = useState([]);\n// const [planetsFilter, setPlanetsFilter] = useState([]);\n// const [name, setName] = useState('');\n// const { inputs, setInputs } = useContext(StarWarProvider);\n// const { setFilters } = useContext(StarWarContext);\n// const [data, setData] = useState([]);\n// const [filters, setFilters] = useState({});\n\n// const fetchAPI = async () => {\n//  setPlanets(await starWarsApi());\n// };\n\n// useEffect(() => {\n//  fetchAPI().then((response) => setData(response));\n// }, []);\n\n// useEffect(() => {\n//  if (name.length === 0) {\n//    setPlanetsFilter(planets);\n//  }\n// }, [name.length, planets]);\n\n// const filterName = ({ target: { value } }) => {\n//  setName(value);\n//  if (value.length > 0) {\n//    const nameFilter = planets\n//      .filter((e) => e.name.includes(value));\n//    setPlanetsFilter(nameFilter);\n//  }\n// };\n\n// return (\n//  <form>\n//    <table>\n//      <tr>\n//        <th>Name</th>\n//        <th>Rotation Period</th>\n//        <th>Orbital Period</th>\n//        <th>Diameter</th>\n//        <th>Climate</th>\n//        <th>Gravity</th>\n//        <th>Terrain</th>\n//        <th>Surface Water</th>\n//        <th>Population</th>\n//        <th>Films</th>\n//        <th>Created</th>\n//        <th>Edited</th>\n//        <th>URL</th>\n//      </tr>\n\n{ /* <div>\n          <input type=\"text\" onChange={ filterName } data-testid=\"name-filter\" />\n        </div> */ }\n\n{ /* {\n          search\n            .filter((e) => e.name.toLowerCase().includes(inputs))\n            .map((e) => (\n              <tr key={ e.name }>\n                <td>{ e.name }</td>\n                <td>{ e.rotation_period }</td>\n                <td>{ e.orbital_period }</td>\n                <td>{ e.diameter }</td>\n                <td>{ e.climate }</td>\n                <td>{ e.gravity }</td>\n                <td>{ e.terrain }</td>\n                <td>{ e.surface_water }</td>\n                <td>{ e.population }</td>\n                <td>\n                  {e.films\n                    .map((film, i) => <p key={ `${film}-${i}` }>{film}</p>)}\n                </td>\n                <td>{ e.created }</td>\n              </tr>\n            ))\n        } */ }\n{ /*\n        {planetsFilter.map((e) => (\n          <tr key={ e.name }>\n            <td>{e.name}</td>\n            <td>{e.rotation_period}</td>\n            <td>{e.orbital_period}</td>\n            <td>{e.diameter}</td>\n            <td>{e.climate}</td>\n            <td>{e.gravity}</td>\n            <td>{e.terrain}</td>\n            <td>{e.surface_water}</td>\n            <td>{e.population}</td>\n            <td>{e.films.map((element) => `${element} `)}</td>\n            <td>{e.created}</td>\n            <td>{e.edited}</td>\n            <td>{e.url}</td>\n          </tr>\n        ))} */ }\n{ /* </table>\n    </form>\n  );\n}\n\nexport default Forms2; */ }\n"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EAAE;AACF;AACA;AAAmB;AAEnB;EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAc;AACd;EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAgB;AAChB;EAAE;AACF;AACA;AACA;AACA;AAC2B"},"metadata":{},"sourceType":"module"}